Günaydın	.	Bugün	buraya	kendi	kendine	çalışan	uçan	plaj	topları	hakkında	konuşmak	için	geldim	.	Hayır	,	bunun	gibi	çevik	hava	robotları	hakkında	.	Bunları	inşa	ederken	karşılaşılan	zorluklar	ve	bu	teknolojiyi	uygulamak	için	inanılmaz	fırsatlar	hakkında	bir	kaç	şey	söylemek	istiyorum	.	Bu	yüzden	bu	robotlar	insansız	uçan	hava	araçlarıdır	.	Buna	rağmen	,	bruada	gördüğünüz	araçlar	büyük	.	Binlerce	kilogram	ağırlığında	ve	hiç	bir	şekilde	çevik	değiller	.	Kendi	kendine	çalışan	bile	değiller	.	Gerçekte	,	bu	araçların	çoğu	birden	fazla	pilotu	içeren	alıcıları	kontrol	eden	ve	görev	koordinatörleri	olan	uçuş	ekipleri	tarafından	çalıştırılmaktadır	.	Buna	benzer	robotları	geliştirirken	ilgimizi	çeken	şey	ve	burada	diğer	iki	resmi	var	--	raftan	satın	alabiliyor	olunması	.	Bunlar	dört	pervaneli	helikopterler	ve	neredeyse	bir	metre	büyüklüğünde	ve	bir	kilodan	az	.	Ve	sensör	ve	işlemcilerle	donanımı	iyileştirdik	,	ve	bu	robotlar	GPS	bilgisi	olmaksızın	iç	mekanlarda	uçabiliyorlar	.	Elimde	tutmuş	olduğum	robot	bir	tanesidir	,	ve	Alex	ve	Daniel	isimli	öğrenciler	tarafından	yaratılmıştır	.	Öyle	ki	,	bunun	ağırlığı	60	gramdan	biraz	daha	fazla	.	Yaklaşık	15	watt	enerji	harcıyor	.	Görüdüğünüz	üzere	,	yaklaşık	20	cm	çapındadır	.	Bu	robotların	nasıl	çalıştığı	ile	ilgili	size	kısa	bir	bilgilendirme	yapmama	izin	verin	.	Dört	adet	pervanesi	var	.	Bunları	aynı	hızda	döndürürseniz	,	robot	havada	duruyor	.	Eğer	pervanelerden	her	birinin	hızını	arttırırsanız	,	robot	uçuşa	geçiyor	ve	yükseliyor	.	Tabi	robot	eğimli	ise	,	yatay	eksene	yöneliyor	,	daha	sonra	bu	doğrultuda	hızlanıyor	.	Eğim	kazandırmak	için	,	iki	yöntemden	biri	bu	.	Bu	yüzden	,	resimde	gördüğünüz	dördüncü	pervane	daha	hızlı	dönüyor	ve	ikinci	pervane	daha	yavaş	dönüyor	.	Ve	oluşan	şey	robotun	yuvarlanmasına	sebep	olan	andır	.	Diğer	bir	yolu	,	eğer	pervane	üçü	hızlandırır	ve	pervane	birin	hızını	yavaşlatırsanız	,	robot	öne	doğru	ilerler	.	Ve	son	olarak	,	eğer	ters	pervane	çiftlerini	diğer	çiften	daha	hızlı	döndürürseniz	,	robot	dik	eksininde	sapar	.	Bu	yüzden	yerleşik	bir	işlemci	temel	olarak	hangi	hareketin	yapılacağına	bakar	ve	bu	hareketleri	oluşturur	ve	motorlara	saniye	de	600	kere	hangi	komutları	göndereceğini	tespit	eder	.	Bu	basit	olarak	bunun	nasıl	çalıştığıdır	.	Bu	tasarımın	avantajlarından	biri	ölçeği	küçülttüğünüz	zaman	robot	doğal	olarak	çevik	oluyor	.	İşte	burada	R	robotun	karekteristik	uzunluğudur	.	Aslında	çapın	yarısıdır	.	R'yi	azalttığınızda	değişen	çok	fazla	fiziksel	parametre	vardır	.	Bunlardan	en	önemlisi	eylemsizlik	ya	da	harekete	karşı	gelmedir	.	Sonuçta	,	açısal	hareketi	idame	eden	eylemsizlik	R'nin	beşinci	kuvveti	(	R	üzeri	5	)	olarak	hesaplanır	.	Bu	yüzden	R	ne	kadar	küçükse	eylemsizlikte	bir	o	kadar	azalancaktır	.	Sonuçta	,	burada	Yunan	alfabesindeki	Alfa	ile	belirtilen	açısal	hızlanma	R	üzeri	bir	şeklide	gidiyor	.	Ters	olarak	R'ye	orantılıdır	.	Daha	küçük	yaparsanız	daha	hızlı	döndürebilirsiniz	.	Bu	videolar	daha	net	görülebilir	.	Sağ	altta	gördüğünüz	bir	robot	yarım	saniyeden	az	bir	sürede	360	derece	dönebiliyor	.	Bir	çok	dönüş	,	daha	az	bir	zamanda	oluyor	.	Kartın	üzerindeki	işlemci	hız	ölçerlerden	ve	kart	üzerindeki	ciroskoptan	geri	bildirim	alıyor	ve	daha	önce	söylediğim	gibi	bu	robotu	stabil	tutmak	için	saniyede	600	kez	komut	gönderek	hesaplama	yapıyor	.	Solda	,	Daniel'in	robotu	havaya	attığını	görüyorsunuz	.	Ve	bu	kontrolün	ne	kadar	duyarı	olduğunu	gösteriyor	.	Nasıl	fırlatırsanız	fırlatın	robot	kendini	kurtarıp	tekrar	olması	gereken	hale	geliyor	.	Peki	bunun	gibi	robotları	niye	yapıyoruz	?	Şey	,	bunun	gibi	robotlar	bir	çok	uygulamaya	sahiptir	.	Onları	saldırganlarla	ilk	olarak	temas	kurmak	için	ya	da	biokimyasal	sızıntıları	ya	da	gaz	sızıntılarını	kontrol	etmek	için	gönderebilirsiniz	.	Onları	inşaat	işleri	gibi	uygulamalarda	Kullanabilirsiniz	.	İşte	burada	robotlar	kiriş	,	kolon	taşıyorlar	ve	küp	biçimde	yapılar	oluşturuyorlar	.	Size	bunun	hakkında	biraz	daha	anlatayım	.	Robotlar	kargo	taşımacılığında	kullanılabilirler	.	Küçük	robotların	problemlerinden	biri	taşıyabilecekleri	yük	kapasitesidir	.	Bunu	birden	çok	robot	kullanarak	aşabilirsiniz	.	Bu	yaşamış	olduğumuz	bir	tecrübenin	resmidir	.	aslında	çok	yakın	bir	zamanda	değil	artık	--	depremden	kısa	bir	süre	sonra	Sendai'de	.	Bunu	gibi	robotlar	yıkılmış	binalara	hasar	tespiti	için	ya	da	reaktör	binalarına	radyasyon	seviyesini	oluşturmak	için	gönderebilebilirler	.	Burada	temel	problem	Eğer	robotlar	birbirinden	bağımsız	şekildeyse	çözmek	zorunda	olduğu	temel	problem	temel	olarak	A	noktasından	B	noktasına	nasıl	gideceğidir	.	Burası	biraz	zorlayıcı	çünkü	robotların	dinamiği	oldukça	karmaşıktır	.	Aslında	,	12	boyutlu	bir	uzayda	yaşıyorlar	.	Burada	ufak	bir	hile	yapıyoruz	.	Eğik	12	boyutlu	uzayı	alıyoruz	ve	onu	dört	boyutlu	düz	bir	uzaya	dönüştürüyoruz	.	Dört	boyutlu	uzay	X	,	Y	,	Z	ve	rota	açısından	oluşmaktadır	.	Bu	yüzden	robotların	yaptığı	şey	minimum	hava	yörüngesinin	oluşumunun	planlamasıdır	.	Fiziği	hatırlamak	gerekirse	,	konumunuz	,	türeviniz	,	ivmeniz	var	,	sonra	hızlanma	ve	ve	sonra	hareketlenme	geliyor	ve	daha	sonra	birleştirme	geliyor	.	Bu	robot	birleşimi	minimize	ediyor	.	Etkin	olarak	yaptığı	şey	pürüzsüz	ve	ince	hareket	oluşturmasıdır	.	Bunu	engellerden	kaçınarak	yapıyor	.	Bu	düz	bir	uzayda	minimum	yörünge	oluşturma	daha	sonra	robotların	kontrolü	ve	sonra	yerine	getirmesi	için	yapması	gereken	karmaşık	12	boyutlu	uzaya	tekrar	geri	dönüştürülecektir	,	Size	bu	minimum	yörünge	oluşturmanın	neye	benzediğini	göstermem	için	bazı	örnekler	vermeme	izin	verin	.	Ve	ilk	videoda	,	Robot	A	noktasından	B	noktasına	bir	ara	noktadan	geçerek	gidiyor	.	Yani	robot	herhangi	bir	kavis	yörüngesini	kesinlikle	oluşturabilir	durumda	.	Bunlar	robotların	2G	oluşuturduğu	dairesel	yörüngelerdir	.	Burada	saniyede	100	kere	robota	nerede	olduğunu	ileten	üzerindeki	hareket	yakalayan	kameradır	.	Aynı	zamanda	roboto	engellerin	nerede	olduğunu	söylüyor	.	Engeller	hareket	ediyor	olabilir	.	Ve	burada	Daniel'in	halkayı	havaya	attığını	görüyorsunuz	,	robot	halkanın	konumunu	hesaplıyor	ve	halkanın	içinden	geçecebileceği	en	iyi	yeri	bulmaya	çalışıyor	.	Ve	akademik	olduğu	gibi	,	laboratuarımızda	fonları	arttırabilmek	için	halkaların	içinden	atlamak	için	eğitim	alıyoruz	ve	robotların	bunu	yapmasını	sağlıyoruz	.	(	alkış	)	Robotların	yapabildiği	diğer	birşey	daha	önce	programlanabilen	ve	öğrenen	yörünge	parçalarını	hatırlamasıdır	.	Burada	görüdüğünüz	robot	hızlanmayı	gerçekleştirmek	için	bir	hareket	oluşturuyor	ve	ve	oryantasyonunu	değiştirip	,	sonra	önceki	konumuna	geliyor	.	Bunu	yapmak	zorunda	çünkü	penceredeki	bu	boşluk	robotun	genişliğinden	birazcık	daha	büyük	.	Sıçrama	tahtasının	üzerinde	duran	dalgıç	gibi	eblirli	bir	momentum	kazaranak	kendini	bırakır	,	ve	sonra	kendi	etrafında	döner	,	ikibuçuk	salto	ve	zarifçe	eksi	haline	döner	,	bu	robot	basitçe	bunu	yapıyor	.	Böylece	bu	oldukça	zor	işleri	yapabilmek	için	küçük	ufak	tefek	yolları	nasıl	birleştireceğini	biliyor	.	Şimdi	konuyu	değiştirmek	istiyorum	.	Bu	küçük	robotların	en	büyük	dezavantajlarından	biri	boyutlarıdır	.	Size	daha	önce	söylediğim	gibi	bu	boyut	engelini	aşmak	için	çok	,	bir	çok	robot	kullanmak	isteyebiliriz	.	Zorluklardan	biri	bukadar	çok	robotu	nasıl	koordine	edebileceğinizdir	.	Burada	doğaya	dönüyoruz	.	Size	Professor	Stephen	Pratt'in	laboratuarında	nesne	taşıyan	Aphaenogaster	çöl	karıncılarının	bir	klibini	göstermek	istiyorum	.	Bu	aslında	bir	incir	parçasıdır	.	Aslında	incir	suyu	ile	kaplanmış	herhangi	bir	nesneyi	alabilirsiniz	ve	karıncalar	bunu	yuvalarına	götüreceklerdir	.	Bu	karıncaların	herhangi	bir	merkezi	koordinatörü	yoktur	.	Komşularını	algılayabiliyorlar	.	Belirgin	bir	iletişim	yok	.	Fakat	,	komşularını	algılabildikleri	ve	nesneleri	algılayabildikleri	için	Grup	arasında	üstü	kapalı	bir	koordinasyon	var	.	Bu	robotlarda	olmasını	istediğimiz	bir	koordinasyon	tipidir	.	etrafında	komşularının	olduğu	bir	robotumuz	olduğu	zaman	--	robot	I	ve	robot	J'ye	bakalım	--	robotlardan	yapmasını	istediğimiz	belli	bir	formasyonda	uçarken	kendi	aralarındaki	mesafeyi	gözlemlemeleridir	.	Ve	bu	mesafenin	kabuledilebilir	seviyelerde	olduğundan	emin	olmak	istiyorsunuz	.	Böylece	tekrar	robotlar	bu	hataları	gözlemler	ve	daha	sonra	saniyede	600	kez	hareket	komutlarına	çevirdikleri	saniyede	100	kez	olan	kontrol	komutlarını	hesaplarlar	.	Bu	merkezi	olmayan	bir	yol	ile	de	yapılabilir	.	Tekrar	,	eğer	çok	ama	çok	robotunuz	varsa	,	görevi	yerine	getirebilmek	için	bu	kadar	hız	ile	bu	bilgiyi	merkezi	olarak	koordine	etmeniz	mümkün	değildir	.	Ayrıca	robotlar	kendi	hareketlerini	diğer	komuşlarından	algıladıkları	yalnızca	lokal	bilgiyi	temel	alırlar	.	Ve	son	olarak	robotların	komşularına	bilinmezlik	içinde	olduğu	üzerinde	duruyoruz	.	Ve	buna	kişisel	alan	diyoruz	.	Size	bir	sonraki	göstermek	istediğim	belirli	bir	formda	uçan	bu	küçük	20	robotun	videosudur	.	Komşularının	konumlarını	iziliyorlar	.	Dizilişi	koruyorlar	.	Diziliş	değişebiliyor	.	Düzlemsel	dizilimde	olabilirler	,	üç	boyutlu	diziliş	içinde	olabilirler	.	Burada	gördüğünüz	gibi	,	üç	boyutlu	dizilişten	düzlemsel	dizilişe	geçiyorlar	.	Engellerin	içinden	uçarak	geçebilmek	için	uçuş	sırasında	dizilişe	uymaları	gerekiyor	.	Yani	tekrar	,	bu	robotlar	gerçekten	birbirlerine	yaklaşıyorlar	.	Sekizinci	uçuşta	gördüğünüz	gibi	,	birbirlerine	3-5	santim	kadar	yaklaşıyorlar	.	Bu	pervane	kantlarının	aerodinamik	etkileşimlerine	rağmen	,	stabil	uçusu	sağlayabiliyorlar	.	(	Alkış	)	Dizilişte	nasıl	uçaçacağınızı	bir	kere	bildikten	sonra	nesneleri	elbirliği	ile	toplayabilirsiniz	.	Bu	gösteriyor	ki	,	robotun	dayanıklılığını	komşuları	ile	takım	oluşturarak	iki	,	üç	,	dört	katına	çıkarabilirsiniz	,	burada	gördüğünüz	gibi	.	Bunu	yapmanın	dezavantajlarından	biri	bunları	yükselttiğiniz	zaman	diyelim	ki	aynı	şeyi	taşıyan	birçok	robota	sahipsiniz	,	temel	olarak	etkili	şekilde	eylemsizliği	arttırıyorsunuz	,	ve	bir	bedel	ödüyorsunuz	;	çok	çevik	olmuyorlar	.	Fakat	taşıma	kapasitesi	adına	kazanım	elde	ediyorsunuz	.	Size	göstermek	istediğim	diğer	bir	uygulama	--	tekrar	,	bizim	laboratuarımızda	--	Bu	Quentin	Lindsey	isimli	yüksek	lisans	ögrencimizin	çalışmasıdır	.	Onun	algoritması	bu	rotobotlara	temel	olarak	üçgen	şeklindeki	elemanlardan	kübik	yapıları	nasıl	bağımsız	olarak	inşa	edeceğini	söylüyor	olmasıdır	.	Algoritması	robotlara	hangi	parçanın	alınacağı	nereye	konulacağını	söylüyor	.	Bu	videoda	görüdüğünüz	--	10-15	kat	hızlandırılmıştır	--	üç	farklı	yapının	robotlar	tarafından	inşa	ediliğini	görüyorsunuz	.	Ve	tekrar	,	herşey	birbirinden	bağımsız	,	ve	Quentinin	yapmak	zorunda	olduğu	şey	inşa	etmek	istediği	tasarımın	kopyasını	elde	etmektir	.	Şu	ana	kadar	gördüğünüz	deneyler	,	bütün	bu	gösteriler	,	hareket	yakalama	sistemlerinin	yardımıyla	yapılmıştır	.	Laboratuardan	ayrıldığınız	zaman	ve	ve	dışarı	çıkıp	gerçek	dünyaya	çıktığınızda	ne	oluyor	?	Ya	hiç	GPS	konum	bilgisi	yoksa	?	Bu	robot	bir	kamera	,	lazer	mesafe	ölçer	tarayıcı	ile	donatılmıştır	.	Çevresinin	haritasını	çıkarmak	için	sensörlerini	kullanıyor	.	Haritanın	sahip	olduğu	özellikler	olan	--	kapı	girişleri	,	pencereler	,	insanlar	,	mobilyalar	--	ve	sonra	kendi	konumunu	bunlarla	karşılaştırarak	tahmin	edebiliyor	.	Öyle	ki	hiç	bir	global	koordinasyon	sistemi	yok	.	Koordinasyon	sistemi	robotun	nerede	olduğu	ve	nereye	baktığı	baz	alınarak	oluşuyor	.	Bu	özelliklere	riayet	ederek	yön	tayininde	bulunuyor	.	Size	Frank	Shen	ve	Professor	Nathan	Micheal	tarafından	geliştirilen	robotun	binaya	ilk	kez	girdiğinde	ve	uçuş	sırasında	harita	oluşturmasını	gösteren	bir	video	göstereceğim	.	Öyle	ki	robotlar	binanın	özelliklerinin	ne	olduğunu	buluyorlar	.	Harita	oluşturuyorlar	.	Bu	özelliklerin	nerede	olduğunu	tayin	edip	size	daha	önce	tarif	ettiğim	bize	saniyede	100	kez	izin	veren	kontrol	algoritmalarını	kullanarak	kendi	yerini	tahmin	ediyor	.	Bu	robot	aslında	Frank	tarafından	komuta	ediliyor	.	Fakat	bu	robot	kendisinin	nereye	gideceğini	bilebilir	.	Farz	edin	ki	;	bunu	bir	binanın	içine	gönderdim	ve	binanın	neye	benzediği	hakkında	bir	fikrim	yok	,	robota	içeri	girip	bir	harita	oluşturmasını	ve	sonra	geri	gelip	bana	binanın	neye	benzediğini	isteyebilirim	.	Öyle	ki	burada	,	robot	bu	haritadaki	A	noktasından	B	noktasına	nasıl	gideceği	problemi	sadece	çözmekle	kalmıyor	,	ayrıca	B	noktasına	her	defasında	gideceği	en	iyi	yolun	ne	olduğunu	buluyor	.	Temel	olarak	az	bilgi	ile	yerleri	arayarak	nereye	gideceğini	biliyor	.	Ve	bu	haritayı	nasıl	oluşturduğudur	.	Sizi	son	bir	uygulama	ile	bırakmak	istiyorum	.	Bu	teknolojinin	bir	çok	uygulaması	vardır	.	Ben	bir	profesörüm	ve	eğiteme	tutkuluyum	.	Robotlar	anaokuldan	lise	son	eğitimine	kadar	ki	yapıyı	gerçekten	değiştirebilir	.	Fakat	biz	Güney	Kaliforniya'dayız	,	Los	Angeles'a	yakınız	,	Bu	yüzden	eğlenceye	yönelik	birşey	ile	sonlandırmak	istiyorum	.	Bir	müzik	videosu	ile	bitirmek	istiyorum	.	Bu	videoyu	oluşturan	yaratıcılardan	Alex	ve	Daniel'i	takdim	etmek	istiyorum	.	(	Alkış	)	Bu	videoyu	başlatmadan	önce	,	bunun	Chris'ten	telefon	aldıktan	son	üç	gün	içinde	yaptıklarını	söylemek	istiyorum	.	Ve	videoyu	çalan	robotlar	tamamen	bağımsızlar	.	Dokuz	robotun	altı	farklı	enstrümanı	çaldığını	göreceksiniz	.	Ve	tabi	ki	,	sadece	TED	2012	için	yapıldı	.	Hadi	izleyelim	.	(	Müzik	)	(	Alkış	)